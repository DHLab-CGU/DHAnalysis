devtools::roxygen2()
roxygen2()
?roxygen2
??roxygen2
devtools::document()
library(DHAnalysis)
library(testthat)
test_check("DHAnalysis")
devtools::use_testthat()
?registerDoParallel
??registerDoParallel
devtools::document()
library(DHAnalysis)
?makeCluster
cl <- makeCluster(cores) # create a cluster with n cores
registerDoParallel(cl) # register the cluster
RxNormData = foreach(i = 1:length(NDCList),
.combine = "rbind",
.packages = "jsonlite") %dopar% {
RxNorm<-fromJSON(paste0("https://rxnav.nlm.nih.gov/REST/rxcui?idtype=NDC&id=",NDCList[i]) )
if(is.null(RxNorm$idGroup$rxnormId)){
rxTable<-data.frame(NDC=NDCList[i],
RxCui="",
Desc="",Type="")
}else{
MESHClass<-fromJSON(paste0("https://rxnav.nlm.nih.gov/REST/rxclass/class/byRxcui?rxcui=",RxNorm$idGroup$rxnormId,"&relaSource=MESH"))
if(is.null(MESHClass$rxclassDrugInfoList$rxclassDrugInfo$minConcept$name)){
rxTable<-data.frame(NDC=NDCList[i],
RxCui=RxNorm$idGroup$rxnormId,
Desc="",Type="")
}else{
meshTable<-data.frame(NDC=NDCList[i],
RxCui=RxNorm$idGroup$rxnormId,
Desc=unique(MESHClass$rxclassDrugInfoList$rxclassDrugInfo$rxclassMinConceptItem$className),
Type="MESH")
miniTable<-data.frame(NDC=NDCList[i],
RxCui=RxNorm$idGroup$rxnormId,
Desc=unique(MESHClass$rxclassDrugInfoList$rxclassDrugInfo$minConcept$name),
Type="miniConcept")
rxTable<-rbind(meshTable,miniTable)
}
}
rxTable
}
library(DHAnalysis)
getEventPeriod<-function(eventAllDate,caseFirstDate){
colnames(eventAllDate)<-c("MemberID","EventDate")
eventAllDate<-left_join(eventAllDate,caseFirstDate,all.x = T,by="MemberID") #5780702
eventAllDate$EventDate<-as.Date(eventAllDate$EventDate)
eventAllDate$FirstDate<-as.Date(eventAllDate$FirstDate)
eventAllDate$Gap<-eventAllDate$EventDate-eventAllDate$FirstDate
eventAllDate$Period<-ifelse(eventAllDate$Gap>=0,"After","Before")
eventAllDate
}
devtools::document()
library(DHAnalysis)
devtools::document()
library(DHAnalysis)
table(IBDCasePharm$DrugEra)
mean(IBDCasePharm$ExposureDays)
library(DHAnalysis)
DHAnalysis::getDrugEra()
